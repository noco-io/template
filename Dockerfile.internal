FROM node:22-alpine
RUN apk add --no-cache git curl

# Create app directory
WORKDIR /setup

# First copy only package.json files to leverage Docker cache
RUN mkdir -p /setup/app && mkdir -p /setup/api && mkdir -p /setup/manager
COPY app/package*.json ./app/
COPY api/package*.json ./api/
COPY manager/package*.json ./manager/

# Install dependencies
RUN cd app && npm install
RUN cd api && npm install
RUN cd manager && npm install 

# Create a backup of node_modules
RUN mkdir -p /tmp/api_node_modules
RUN mkdir -p /tmp/app_node_modules
RUN cp -r ./api/node_modules/. /tmp/api_node_modules/
RUN cp -r ./app/node_modules/. /tmp/app_node_modules/

# Now copy the rest of the application code
COPY app ./app
COPY api ./api
COPY manager ./manager
COPY start.sh ./start.sh

# Remove the source code but keep node_modules in the tmp directory
RUN rm -rf ./app && rm -rf ./api

# Set environment variables
ENV PORT=3000
ENV NODE_ENV=development
# API_WEBSOCKET_URL will be passed at runtime

# Expose the port
EXPOSE 3000

WORKDIR /noco

# Start command: run both Next.js dev server and file manager
CMD ["/bin/sh", "/setup/start.sh"]
